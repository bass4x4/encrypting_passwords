package UI;

import Backend.PasswordUtils;
import Backend.UserContext;
import com.intellij.uiDesigner.core.GridConstraints;
import com.intellij.uiDesigner.core.GridLayoutManager;
import com.intellij.uiDesigner.core.Spacer;

import javax.swing.*;
import java.awt.*;

public class AddUserWindow {
    private JPanel addUserPanel;
    private JTextField userNameField;
    private JButton addUserButton;
    private JLabel addUserLabel;
    private JSpinner passwordLimit;
    private JLabel passwordLengthLabel;

    public AddUserWindow() {
        addUserButton.addActionListener(actionEvent -> {
            String userName = userNameField.getText();
            if (!userName.isEmpty()) {
                if (!PasswordUtils.PASSWORDS.containsKey(userName)) {
                    int passwordLength;
                    try {
                        passwordLength = (int) passwordLimit.getValue();
                        if (passwordLength > 0) {
                            UserContext newUserContext = new UserContext(userName, "", false, false, passwordLength);
                            PasswordUtils.PASSWORDS.put(userName, newUserContext);
                            JOptionPane.showMessageDialog(null, String.format("Successfully added %s user.", userName));
                        } else {
                            JOptionPane.showMessageDialog(null, "Password must be a number and should contain at least 1 symbol!");
                        }
                    } catch (ClassCastException e) {
                        JOptionPane.showMessageDialog(null, "Password must be a number and should contain at least 1 symbol!");
                    }
                } else {
                    JOptionPane.showMessageDialog(null, String.format("User with name %s already exists.", userName));
                }
            }
        });
    }

    public JPanel getAddUserPanel() {
        return addUserPanel;
    }

    {
// GUI initializer generated by IntelliJ IDEA GUI Designer
// >>> IMPORTANT!! <<<
// DO NOT EDIT OR ADD ANY CODE HERE!
        $$$setupUI$$$();
    }

    /**
     * Method generated by IntelliJ IDEA GUI Designer
     * >>> IMPORTANT!! <<<
     * DO NOT edit this method OR call it in your code!
     *
     * @noinspection ALL
     */
    private void $$$setupUI$$$() {
        addUserPanel = new JPanel();
        addUserPanel.setLayout(new GridLayoutManager(7, 3, new Insets(0, 0, 0, 0), -1, -1));
        userNameField = new JTextField();
        addUserPanel.add(userNameField, new GridConstraints(2, 1, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_WANT_GROW, GridConstraints.SIZEPOLICY_FIXED, null, new Dimension(150, -1), null, 0, false));
        addUserLabel = new JLabel();
        addUserLabel.setText("Username");
        addUserPanel.add(addUserLabel, new GridConstraints(1, 1, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_FIXED, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        addUserButton = new JButton();
        addUserButton.setText("Add");
        addUserPanel.add(addUserButton, new GridConstraints(5, 1, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        final Spacer spacer1 = new Spacer();
        addUserPanel.add(spacer1, new GridConstraints(6, 1, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_VERTICAL, 1, GridConstraints.SIZEPOLICY_WANT_GROW, null, null, null, 0, false));
        final Spacer spacer2 = new Spacer();
        addUserPanel.add(spacer2, new GridConstraints(0, 1, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_VERTICAL, 1, GridConstraints.SIZEPOLICY_WANT_GROW, null, null, null, 0, false));
        passwordLimit = new JSpinner();
        addUserPanel.add(passwordLimit, new GridConstraints(4, 1, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_WANT_GROW, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        final Spacer spacer3 = new Spacer();
        addUserPanel.add(spacer3, new GridConstraints(4, 2, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_WANT_GROW, 1, null, null, null, 0, false));
        final Spacer spacer4 = new Spacer();
        addUserPanel.add(spacer4, new GridConstraints(4, 0, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_WANT_GROW, 1, null, null, null, 0, false));
        passwordLengthLabel = new JLabel();
        passwordLengthLabel.setText("Minimum password length");
        addUserPanel.add(passwordLengthLabel, new GridConstraints(3, 1, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_FIXED, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
    }

    /**
     * @noinspection ALL
     */
    public JComponent $$$getRootComponent$$$() {
        return addUserPanel;
    }

}
