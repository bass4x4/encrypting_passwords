package UI;

import Backend.PasswordUtils;
import com.intellij.uiDesigner.core.GridConstraints;
import com.intellij.uiDesigner.core.GridLayoutManager;
import com.intellij.uiDesigner.core.Spacer;

import javax.swing.*;
import java.awt.*;

public class AdminOptionsWindow {
    private JPanel adminOptionsPanel;
    private JButton changePasswordButton;
    private JButton listUsersButton;
    private JButton addUserButton;

    AdminOptionsWindow() {
        changePasswordButton.addActionListener(actionEvent -> PasswordUtils.setUsersNewPassword(PasswordUtils.ADMIN_NAME));

        addUserButton.addActionListener(actionEvent -> createPanelOfType(new AddUserWindow().getAddUserPanel(), 200, 200));
        listUsersButton.addActionListener(actionEvent -> {
            ListUsersWindow listUsersWindow = new ListUsersWindow();
            listUsersWindow.setUp();
            createPanelOfType(listUsersWindow.getListUsersPanel(), 500, 250);
        });
    }

    private void createPanelOfType(JPanel adminOptionsPanel, int x, int y) {
        final JDialog optionWindow = new JDialog(new JFrame("Change password"), true);

        optionWindow.setContentPane(adminOptionsPanel);
        optionWindow.pack();
        optionWindow.setSize(x, y);
        optionWindow.setMinimumSize(new Dimension(200, 200));
        optionWindow.setVisible(true);
    }

    public JPanel getAdminOptionsPanel() {
        return adminOptionsPanel;
    }

    {
// GUI initializer generated by IntelliJ IDEA GUI Designer
// >>> IMPORTANT!! <<<
// DO NOT EDIT OR ADD ANY CODE HERE!
        $$$setupUI$$$();
    }

    /**
     * Method generated by IntelliJ IDEA GUI Designer
     * >>> IMPORTANT!! <<<
     * DO NOT edit this method OR call it in your code!
     *
     * @noinspection ALL
     */
    private void $$$setupUI$$$() {
        adminOptionsPanel = new JPanel();
        adminOptionsPanel.setLayout(new GridLayoutManager(5, 1, new Insets(0, 0, 0, 0), -1, -1));
        changePasswordButton = new JButton();
        changePasswordButton.setText("Change password");
        adminOptionsPanel.add(changePasswordButton, new GridConstraints(1, 0, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        listUsersButton = new JButton();
        listUsersButton.setText("List users");
        adminOptionsPanel.add(listUsersButton, new GridConstraints(2, 0, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        addUserButton = new JButton();
        addUserButton.setText("Add user");
        adminOptionsPanel.add(addUserButton, new GridConstraints(3, 0, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        final Spacer spacer1 = new Spacer();
        adminOptionsPanel.add(spacer1, new GridConstraints(0, 0, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_VERTICAL, 1, GridConstraints.SIZEPOLICY_WANT_GROW, null, null, null, 0, false));
        final Spacer spacer2 = new Spacer();
        adminOptionsPanel.add(spacer2, new GridConstraints(4, 0, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_VERTICAL, 1, GridConstraints.SIZEPOLICY_WANT_GROW, null, null, null, 0, false));
    }

    /**
     * @noinspection ALL
     */
    public JComponent $$$getRootComponent$$$() {
        return adminOptionsPanel;
    }

}
